{
  "map" : "(def l '(1 2 3))",
  "vectors" : "(def v [])",
  "lists" : "(def l (list 1 2 3))",
  "hello" : "(defn hello [name]\r\n  )",
  "maths" : "(def expr (= (- 10 (* 2 3)) n))",
  "strings" : "(def s (. \"'goodbye'.toUpperCase\"))",
  "maps" : "(def n 0)",
  "rest" : "(def v [10 20 30 40])",
  "conj_list" : "(def l '(3 4))",
  "conj_map" : "(def kv [:a 1])",
  "conj_vector" : "(def v [1 2])",
  "filter" : "(def l '(3 4 5 6 7))",
  "functions" : "(def n 0)",
  "seqs" : "(def n 0)",
  "truth" : "(def truth (= false true))",
  "conj_set" : "(def n 0)",
  "double" : "(def f \r\n  (fn [n]\r\n    ))",
  "sets" : "(def s #{:a :b :c :d})"
}